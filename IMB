// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// Â© lequochieu284

//@version=5
strategy("chiec luoc IMB", overlay=true)

risk = input(title="risk %:", defval=0.5)
rrr = input(defval=3.1, title ="RR:")
onlyBuy = input(defval = false)
onlySell = input(defval = false)

var highestHigh = 0.0
var lowestLow = 999999.0
var checkBreakHigh = 0
var checkBreakLow = 0
var checkCountDown = 0
var checkCountUp = 0
var tmpNewHigh = 0.0
var tmpNewLow = 999999.0
var arrTradeAddress = array.new_float(0)
var TP = 0.0
var SL = 0.0
var SL1 = 0.0
var SL2 = 0.0
var amount = 0.0
cancelBUY = false
cancelSELL = false
var i = 0
var allowTrade = true
allowBuy = false
allowSell = false
entry1 = 0.0
entry2 = 0.0
amount1 = 0.0
amount2 = 0.0

// uptrend
if high > highestHigh
    array.clear(arrTradeAddress)
    allowTrade := true
    highestHigh := high
    if checkCountDown >= 2
        checkBreakHigh := checkBreakHigh + 1
        lowestLow := tmpNewLow
        checkBreakLow := 0
        checkCountDown := 0
        tmpNewLow := 999999
        cancelBUY := true
        
else
    tmpNewLow := low < tmpNewLow ? low : tmpNewLow
    if close < open
        checkCountDown := checkCountDown + 1


// dow trend
if low < lowestLow
    allowTrade := true
    array.clear(arrTradeAddress)
    lowestLow := low
    if checkCountUp >=2
        checkBreakLow := checkBreakLow + 1
        highestHigh := tmpNewHigh
        checkBreakHigh := 0
        checkCountUp := 0
        tmpNewHigh := 0
        cancelSELL := true
else
    tmpNewHigh := high > tmpNewHigh ? high: tmpNewHigh
    if close > open
        checkCountUp := checkCountUp + 1



//plotshape(checkBreakLow >= 2 ? checkBreakLow : na, style = shape.labeldown, color=color.red, size=size.tiny)
//plotshape(checkBreakLow == 1 ? checkBreakLow : na, style = shape.labeldown, color=color.red, size=size.tiny)
//plotshape(checkBreakHigh == 2 ? checkBreakHigh : na, style = shape.labelup, color=color.green, size=size.tiny)
//plot(countHigh, title = "countHigh")
//plot(countLow,  title = "countLow")
plot(checkBreakHigh,  title = "checkBreakHigh", color = color.green)
plot(checkBreakLow,  title = "checkBreakLow", color = color.red)
//plot(tmpNewHigh, title = "tmpNewHigh", color = color.yellow)
//plot(tmpNewLow,  title = "tmpNewLow",  color = color.gray)

plot(highestHigh, linewidth = 2, style = plot.style_circles, color = color.green, offset = 0, title = "highestHigh")
plot(lowestLow, linewidth = 2, style = plot.style_circles, color = color.red, offset = 0, title = "lowestLow")


if checkBreakHigh >= 2 and high < highestHigh and array.size(arrTradeAddress) == 0
    i := 2
    array.clear(arrTradeAddress)
    TP := (high[1] + close[1]) / 2
    while low[i] > lowestLow
        if low[i - 2] > high[i]
            array.push(arrTradeAddress, (low[i - 2] + high[i])/2 ) 
        i := i + 1    
            
    
if checkBreakLow >= 2 and low > lowestLow and array.size(arrTradeAddress) == 0
    i := 2
    array.clear(arrTradeAddress)
    TP := (low[1] + close[1]) / 2
    while high[i] < highestHigh
        if high[i - 2] < low[i]
            array.push(arrTradeAddress, (low[i - 2] + high[i])/2)
        i := i + 1

if array.size(arrTradeAddress) <= 2 and array.size(arrTradeAddress) > 0 and allowTrade
    if checkBreakHigh >= 2
        allowBuy := true
            
    if checkBreakLow >= 2
        allowSell := true
        

if allowBuy and not onlySell
    if array.get(arrTradeAddress, 0)
        entry1 := array.get(arrTradeAddress, 0)
        SL1 := entry1 - (TP - entry1) * (1.0/rrr)
        amount1 := risk/100 * strategy.initial_capital / (entry1 - SL1)
        strategy.entry("BUY1", strategy.long, limit = entry1, qty = amount1)
        // strategy.exit("exitBUY1", id = "BUY1", stop = SL1, limit = TP)
        allowTrade := false
        
    if array.size(arrTradeAddress) == 2
        entry2 := array.get(arrTradeAddress, 1)
        SL2 := entry2 - (TP - entry2) * (1.0/rrr)
        amount2 := risk/100 * strategy.initial_capital / (entry2 - SL2)
        strategy.entry("BUY2", strategy.long, limit = entry2, qty = amount2)
        // strategy.exit("exitBUY2", id = "BUY2", stop = SL2, limit = TP)
        allowTrade := false

if allowSell and not onlyBuy
    if array.get(arrTradeAddress, 0)
        entry1 := array.get(arrTradeAddress, 0)
        SL1 := entry1 + (entry1 - TP) * (1.0/rrr)
        amount1 := risk/100 * strategy.initial_capital / (SL1 - entry1)
        strategy.entry("SELL1", strategy.short, limit = entry1, qty = amount1)
        // strategy.exit("exitSELL1", id = "SELL1", stop = SL1, limit = TP)
        allowTrade := false
        
    if array.size(arrTradeAddress) == 2
        entry2 := array.get(arrTradeAddress, 1)
        SL2 := entry2 + (entry2 - TP) * (1.0/rrr)
        amount2 := risk/100 * strategy.initial_capital / (SL2 - entry2)
        strategy.entry("SELL2", strategy.short, limit = entry2, qty = amount1)
        // strategy.exit("exitSELL2", id = "SELL2", stop = SL2, limit = TP)
        allowTrade := false

if checkBreakHigh >= 2
    strategy.exit("exitBUY1", id = "BUY1", stop = SL1, limit = TP)
    strategy.exit("exitBUY2", id = "BUY2", stop = SL2, limit = TP)
    
  
if checkBreakLow >= 2
    strategy.exit("exitSELL1", id = "SELL1", stop = SL1, limit = TP)
    strategy.exit("exitSELL2", id = "SELL2", stop = SL2, limit = TP)


if cancelBUY or cancelSELL
    strategy.cancel_all()
    
plot(entry1, title = "entry1")
plot(SL1, title = "SL1")
plot(entry2, title = "entry2")
plot(SL2, title = "SL2")
plot(TP, title = "TP")

plot(array.size(arrTradeAddress), title="arrTradeAddress")
//plot(strategy.position_size > 0 ? entry1: na, linewidth = 2, style = plot.style_circles, color = color.orange, offset = -1)
//plot(strategy.position_size > 0 ? SL1: na, linewidth = 2, style=plot.style_linebr, color = color.red, offset = -1)
//plot(strategy.position_size > 0 ? entry2: na, linewidth = 2, style = plot.style_circles, color = color.orange, offset = -1)
//plot(strategy.position_size > 0 ? SL2: na, linewidth = 2, style=plot.style_linebr, color = color.red, offset = -1)


